name: Security Scan

on:
  release:
    types: [created]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * MON' # Weekly scan on Mondays

jobs:
  binary-scan:
    runs-on: ubuntu-latest
    name: Scan Release Binaries
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download release binaries
        if: github.event_name == 'release'
        run: |
          mkdir -p binaries
          # Download all binaries from the release
          gh release download ${{ github.event.release.tag_name }} \
            --dir binaries \
            --pattern "lcl-*" || true
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Generate checksums
        run: |
          cd binaries
          sha256sum lcl-* > ../checksums.txt || true
          cd ..

      - name: Scan with ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon
          sudo freshclam || true
          clamscan -r binaries/ --log=av-scan.log

      - name: Check for known vulnerabilities
        run: |
          # Install CVE Binary Tool
          pip install cve-bin-tool
          # Scan binaries
          cve-bin-tool binaries/ || true

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./binaries
          format: spdx-json
          output-file: lcl-sbom.json

      - name: Upload security artifacts
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            av-scan.log
            checksums.txt
            lcl-sbom.json

      - name: Create security report
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "Date: $(date)" >> security-report.md
          echo "## Antivirus Scan" >> security-report.md
          tail -n 20 av-scan.log >> security-report.md || echo "No threats detected" >> security-report.md
          echo "## Checksums" >> security-report.md
          cat checksums.txt >> security-report.md || echo "No binaries found" >> security-report.md

      - name: Upload report
        if: github.event_name == 'release'
        run: |
          gh release upload ${{ github.event.release.tag_name }} \
            security-report.md \
            checksums.txt \
            lcl-sbom.json \
            --clobber || true
        env:
          GH_TOKEN: ${{ github.token }}

  dependency-scan:
    runs-on: ubuntu-latest
    name: Scan Dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  container-scan:
    runs-on: ubuntu-latest
    name: Scan Docker Images
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: .lcl/Dockerfile
          failure-threshold: warning
        continue-on-error: true

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: dunglas/frankenphp:1-php8.2-alpine
          args: --severity-threshold=high
        continue-on-error: true

  create-badge:
    runs-on: ubuntu-latest
    needs: [binary-scan, dependency-scan]
    if: success()
    steps:
      - name: Update security badge
        run: |
          echo "Security scan passed on $(date)" > security-status.txt
          # This would update a badge service or create a status file